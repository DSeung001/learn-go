// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/video_processing.proto

package videopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 동영상 데이터 청크 (바이너리)
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// 청크 순서 번호 (전송 순서 식별용)
	Sequence      int32 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoChunk) Reset() {
	*x = VideoChunk{}
	mi := &file_proto_video_processing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoChunk) ProtoMessage() {}

func (x *VideoChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_video_processing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoChunk.ProtoReflect.Descriptor instead.
func (*VideoChunk) Descriptor() ([]byte, []int) {
	return file_proto_video_processing_proto_rawDescGZIP(), []int{0}
}

func (x *VideoChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VideoChunk) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type ProcessingStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 처리된 청크의 순서 번호
	Sequence int32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// 처리 상태 메시지 (예: "processed")
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// 처리에 소요된 시간 (초 단위)
	ProcessingTime float32 `protobuf:"fixed32,3,opt,name=processingTime,proto3" json:"processingTime,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProcessingStatus) Reset() {
	*x = ProcessingStatus{}
	mi := &file_proto_video_processing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingStatus) ProtoMessage() {}

func (x *ProcessingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_video_processing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingStatus.ProtoReflect.Descriptor instead.
func (*ProcessingStatus) Descriptor() ([]byte, []int) {
	return file_proto_video_processing_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessingStatus) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ProcessingStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessingStatus) GetProcessingTime() float32 {
	if x != nil {
		return x.ProcessingTime
	}
	return 0
}

var File_proto_video_processing_proto protoreflect.FileDescriptor

var file_proto_video_processing_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x70, 0x62, 0x22, 0x3c, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x52, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x13, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x70, 0x62, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x19, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x28, 0x01, 0x30, 0x01, 0x42, 0x17, 0x5a, 0x15, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x70, 0x62, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_video_processing_proto_rawDescOnce sync.Once
	file_proto_video_processing_proto_rawDescData []byte
)

func file_proto_video_processing_proto_rawDescGZIP() []byte {
	file_proto_video_processing_proto_rawDescOnce.Do(func() {
		file_proto_video_processing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_video_processing_proto_rawDesc), len(file_proto_video_processing_proto_rawDesc)))
	})
	return file_proto_video_processing_proto_rawDescData
}

var file_proto_video_processing_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_video_processing_proto_goTypes = []any{
	(*VideoChunk)(nil),       // 0: videopb.VideoChunk
	(*ProcessingStatus)(nil), // 1: videopb.ProcessingStatus
}
var file_proto_video_processing_proto_depIdxs = []int32{
	0, // 0: videopb.VideoService.ProcessVideo:input_type -> videopb.VideoChunk
	1, // 1: videopb.VideoService.ProcessVideo:output_type -> videopb.ProcessingStatus
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_video_processing_proto_init() }
func file_proto_video_processing_proto_init() {
	if File_proto_video_processing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_video_processing_proto_rawDesc), len(file_proto_video_processing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_video_processing_proto_goTypes,
		DependencyIndexes: file_proto_video_processing_proto_depIdxs,
		MessageInfos:      file_proto_video_processing_proto_msgTypes,
	}.Build()
	File_proto_video_processing_proto = out.File
	file_proto_video_processing_proto_goTypes = nil
	file_proto_video_processing_proto_depIdxs = nil
}
